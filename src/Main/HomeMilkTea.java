/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package Main;

import java.awt.Image;
//import AsmJava.Login;
import java.awt.CardLayout;
import java.awt.Color;
import java.awt.Container;
import java.util.ArrayList;
import java.util.Collection;
import java.util.Collections;
import java.util.Comparator;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JCheckBox;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;
import lib.XFile;
import model.Milk;
import model.Sales;

/**
 *
 * @author Nguyen Anh Trinh
 */
public class HomeMilkTea extends javax.swing.JFrame {

    DefaultTableModel tbModel;
    DefaultComboBoxModel cbBoxModel = new DefaultComboBoxModel();
    String FileSale = "";
    String filePath = "";
    CardLayout cardLayout;
    Map<String, Milk> menu;
    ArrayList<Milk> MilkList;
    ArrayList<Sales> SaleList;
    int currentRow = -1;

    /**
     * Creates new form HomeMilkTea
     */
    public HomeMilkTea() {
        initComponents();
        cardLayout = (CardLayout) Content.getLayout();
        initTable();//dinh nghixa ban
//        initTable2();
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
        tbMana.setDefaultEditor(Object.class, null);
        tbSale.setDefaultEditor(Object.class, null);
        filePath = "./src/model/Milks1.dat";
        FileSale = "./src/model/sales.dat";
        MilkList = new ArrayList<>();
        SaleList = new ArrayList<>();
        boolean file = loadFile();

        if (file) {
            fillToTable();
        }

        loadcb();

        menu = new HashMap<>();
        setTitle("Milk Tea");
        Toping = new ArrayList<>();
        setLocationRelativeTo(null);
    }

    private boolean loadFile() {
        if (XFile.readObject(filePath) == null) {
            return false;
        } else {
            MilkList = (ArrayList<Milk>) XFile.readObject(filePath);
            return true;
        }
    }

    private boolean loadFile2() {
        if (XFile.readObject(FileSale) == null) {
            return false;
        } else {
            SaleList = (ArrayList<Sales>) XFile.readObject(FileSale);
            return true;
        }
    }

    private void loadcb() {
        String[] MenuList = {"Choose your Milk"};
        for (String string : MenuList) {
            cbBoxModel.addElement(string);
            for (Milk mi : MilkList) {
                cbBoxModel.addElement(mi);
            }
        }

        cbMenu.setModel(cbBoxModel);
    }

    private void initTable() {
        String[] columnNames = {"ID", "Name", "Price"};
        tbModel = new DefaultTableModel(columnNames, 0);
        tbMana.setModel(tbModel);
    }

    private void initTable2() {
        String[] columnNames = {"Name", "Topping", "Price"};
        tbModel = new DefaultTableModel(columnNames, 0);
        tbSale.setModel(tbModel);
    }

    private void fillToTable() {
        tbModel.setRowCount(0);
        for (Milk c : MilkList) {
            Object[] row = new Object[]{c.getID(), c.getName(), c.getPrice()};
            tbModel.addRow(row);

        }
    }

    private void fillToTable2() {
        tbModel.setRowCount(0);
        for (Sales s : SaleList) {
            Object[] row = new Object[]{s.getMilk().getName(), s.getTopping(), (Double) s.getPrice()};
            tbModel.addRow(row);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        lbMilk = new javax.swing.JLabel();
        lbsell = new javax.swing.JLabel();
        lbLogo = new javax.swing.JLabel();
        lbLogout = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        Content = new javax.swing.JPanel();
        Milk = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        txtID = new javax.swing.JTextField();
        txtName = new javax.swing.JTextField();
        txtPrice = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tbMana = new javax.swing.JTable();
        btnRefesh = new javax.swing.JButton();
        btnAdd = new javax.swing.JButton();
        btnDelete = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        Exit = new javax.swing.JButton();
        btnSort = new javax.swing.JButton();
        jLabel11 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel12 = new javax.swing.JLabel();
        Sale = new javax.swing.JPanel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        txtPri = new javax.swing.JTextField();
        cbCheese = new javax.swing.JCheckBox();
        cbPudding = new javax.swing.JCheckBox();
        cbEgg = new javax.swing.JCheckBox();
        cbBoba = new javax.swing.JCheckBox();
        cbPopping = new javax.swing.JCheckBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tbSale = new javax.swing.JTable();
        cbMenu = new javax.swing.JComboBox<>();
        btnReFesh = new javax.swing.JButton();
        btnADD = new javax.swing.JButton();
        btnExit = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(255, 153, 153));

        lbMilk.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        lbMilk.setText("Milk Tea");
        lbMilk.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbMilkMousePressed(evt);
            }
        });

        lbsell.setFont(new java.awt.Font("Segoe UI Symbol", 0, 18)); // NOI18N
        lbsell.setText("Sale");
        lbsell.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbsellMousePressed(evt);
            }
        });

        lbLogo.setFont(new java.awt.Font("Segoe UI", 0, 24)); // NOI18N
        lbLogo.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/logo (1).jpg"))); // NOI18N

        lbLogout.setFont(new java.awt.Font("Segoe UI Historic", 0, 18)); // NOI18N
        lbLogout.setText("Logout");
        lbLogout.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                lbLogoutMousePressed(evt);
            }
        });

        jLabel13.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/meo1.png"))); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addContainerGap(39, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lbLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbsell, javax.swing.GroupLayout.PREFERRED_SIZE, 75, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(lbMilk, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(84, 84, 84))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(31, 31, 31)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel13)
                    .addComponent(lbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 140, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(47, 47, 47)
                .addComponent(lbLogo, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lbMilk, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(lbsell, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(lbLogout, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 86, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Content.setBackground(new java.awt.Color(255, 204, 204));
        Content.setLayout(new java.awt.CardLayout());

        Milk.setBackground(new java.awt.Color(255, 204, 204));

        jLabel2.setFont(new java.awt.Font("Sitka Subheading", 0, 18)); // NOI18N
        jLabel2.setText("Milk Maganer");

        jLabel3.setText("Milk's ID");

        jLabel4.setText("Name");

        jLabel5.setText("Price");

        txtPrice.setText("0");

        tbMana.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Name", "Price", "null"
            }
        ));
        tbMana.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbManaMousePressed(evt);
            }
        });
        jScrollPane1.setViewportView(tbMana);

        btnRefesh.setText("Refesh");
        btnRefesh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnRefeshActionPerformed(evt);
            }
        });

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnUpdate.setText("Update");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        Exit.setText("Exit");
        Exit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitActionPerformed(evt);
            }
        });

        btnSort.setText("Sort by price");
        btnSort.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSortActionPerformed(evt);
            }
        });

        jLabel11.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cup.png"))); // NOI18N
        jLabel11.setText("jLabel11");

        jLabel10.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cup1 (1).png"))); // NOI18N
        jLabel10.setText("jLabel10");

        jLabel12.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/cup3.png"))); // NOI18N
        jLabel12.setText("jLabel12");

        javax.swing.GroupLayout MilkLayout = new javax.swing.GroupLayout(Milk);
        Milk.setLayout(MilkLayout);
        MilkLayout.setHorizontalGroup(
            MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MilkLayout.createSequentialGroup()
                .addGap(300, 300, 300)
                .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(MilkLayout.createSequentialGroup()
                .addGap(17, 17, 17)
                .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MilkLayout.createSequentialGroup()
                        .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, 55, Short.MAX_VALUE)
                            .addComponent(jLabel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, 183, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(MilkLayout.createSequentialGroup()
                            .addComponent(btnRefesh)
                            .addGap(18, 18, 18)
                            .addComponent(btnAdd)
                            .addGap(18, 18, 18)
                            .addComponent(btnDelete))
                        .addGroup(MilkLayout.createSequentialGroup()
                            .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                .addGroup(MilkLayout.createSequentialGroup()
                                    .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 68, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                    .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addComponent(btnUpdate))
                            .addGap(29, 29, 29)
                            .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(Exit)
                                .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 213, Short.MAX_VALUE)
                .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MilkLayout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(70, 70, 70))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, MilkLayout.createSequentialGroup()
                        .addComponent(btnSort)
                        .addGap(218, 218, 218))))
        );
        MilkLayout.setVerticalGroup(
            MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(MilkLayout.createSequentialGroup()
                .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(MilkLayout.createSequentialGroup()
                        .addGap(61, 61, 61)
                        .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel3)
                            .addComponent(txtID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(txtName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtPrice, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(29, 29, 29)
                        .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnRefesh)
                            .addComponent(btnAdd)
                            .addComponent(btnDelete))
                        .addGap(18, 18, 18)
                        .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnUpdate)
                            .addComponent(Exit))
                        .addGap(40, 40, 40)
                        .addGroup(MilkLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 64, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(MilkLayout.createSequentialGroup()
                        .addGap(17, 17, 17)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 32, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 330, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSort)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        Content.add(Milk, "Milk");

        Sale.setBackground(new java.awt.Color(255, 204, 204));

        jLabel6.setFont(new java.awt.Font("Sitka Banner", 0, 24)); // NOI18N
        jLabel6.setText("Sales");

        jLabel7.setText("Name");

        jLabel8.setText("Topping");

        jLabel9.setText("Price");

        txtPri.setEditable(false);
        txtPri.setText("0 Vnd");
        txtPri.setEnabled(false);

        cbCheese.setText("Cheese");
        cbCheese.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbCheeseItemStateChanged(evt);
            }
        });
        cbCheese.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                cbCheeseMousePressed(evt);
            }
        });

        cbPudding.setText("Pudding");

        cbEgg.setText("Egg Pudding");

        cbBoba.setText("Boba Pearls");

        cbPopping.setText("Popping Bubbles");

        tbSale.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Tooping", "Price"
            }
        ));
        tbSale.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mousePressed(java.awt.event.MouseEvent evt) {
                tbSaleMousePressed(evt);
            }
        });
        jScrollPane2.setViewportView(tbSale);

        cbMenu.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cbMenuItemStateChanged(evt);
            }
        });

        btnReFesh.setText("Refesh");
        btnReFesh.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnReFeshActionPerformed(evt);
            }
        });

        btnADD.setText("Add");
        btnADD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnADDActionPerformed(evt);
            }
        });

        btnExit.setText("Exit");
        btnExit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExitActionPerformed(evt);
            }
        });

        jLabel14.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/meo2.png"))); // NOI18N
        jLabel14.setText("jLabel14");

        jLabel15.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/meo3.png"))); // NOI18N
        jLabel15.setText("jLabel15");

        jLabel16.setIcon(new javax.swing.ImageIcon(getClass().getResource("/img/meo1.png"))); // NOI18N
        jLabel16.setText("jLabel16");

        javax.swing.GroupLayout SaleLayout = new javax.swing.GroupLayout(Sale);
        Sale.setLayout(SaleLayout);
        SaleLayout.setHorizontalGroup(
            SaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, SaleLayout.createSequentialGroup()
                .addContainerGap(527, Short.MAX_VALUE)
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 173, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(327, 327, 327))
            .addGroup(SaleLayout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(SaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SaleLayout.createSequentialGroup()
                        .addGroup(SaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel7, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel8, javax.swing.GroupLayout.DEFAULT_SIZE, 62, Short.MAX_VALUE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(SaleLayout.createSequentialGroup()
                                .addComponent(cbCheese, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbPudding, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(cbPopping))
                            .addComponent(cbMenu, javax.swing.GroupLayout.PREFERRED_SIZE, 257, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtPri, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(SaleLayout.createSequentialGroup()
                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(30, 30, 30)
                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(SaleLayout.createSequentialGroup()
                        .addGap(38, 38, 38)
                        .addGroup(SaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(SaleLayout.createSequentialGroup()
                                .addComponent(cbEgg, javax.swing.GroupLayout.PREFERRED_SIZE, 117, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cbBoba, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(SaleLayout.createSequentialGroup()
                                .addComponent(btnReFesh)
                                .addGap(29, 29, 29)
                                .addComponent(btnADD)
                                .addGap(18, 18, 18)
                                .addComponent(btnExit)
                                .addGap(17, 17, 17)))))
                .addGap(18, 18, 18)
                .addComponent(jScrollPane2)
                .addContainerGap())
        );
        SaleLayout.setVerticalGroup(
            SaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(SaleLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(SaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(SaleLayout.createSequentialGroup()
                        .addGroup(SaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel7)
                            .addComponent(cbMenu, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(SaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel8)
                            .addComponent(cbCheese)
                            .addComponent(cbPudding)
                            .addComponent(cbPopping))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(SaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbEgg)
                            .addComponent(cbBoba))
                        .addGap(10, 10, 10)
                        .addGroup(SaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(txtPri, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(18, 18, 18)
                        .addGroup(SaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnReFesh)
                            .addComponent(btnADD)
                            .addComponent(btnExit))
                        .addGap(129, 129, 129)
                        .addGroup(SaleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 84, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(SaleLayout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 394, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(57, Short.MAX_VALUE))))
        );

        Content.add(Sale, "Sale");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(Content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(Content, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void lbMilkMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbMilkMousePressed
        // TODO add your handling code here:
        cardLayout.show(Content, "Milk");
        fillToTable();

    }//GEN-LAST:event_lbMilkMousePressed

    private void lbsellMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbsellMousePressed
        // TODO add your handling code here:
        cardLayout.show(Content, "Sale");

        initTable2();
        boolean file2 = loadFile2();
        if (file2) {
            fillToTable2();

        }
        MilkList.clear();
        cbMenu.removeAllItems();
        MilkList = (ArrayList<Milk>) XFile.readObject(filePath);
        for (Milk m1 : MilkList) {
            cbMenu.addItem(m1.getName());
            menu.put(m1.getID(), m1);
        }
//   
    }//GEN-LAST:event_lbsellMousePressed

    private void btnRefeshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnRefeshActionPerformed
        // TODO add your handling code here:
        txtID.setText("");
        txtID.setEnabled(true);
        txtName.setText("");
        txtPrice.setText("0");
        btnAdd.setEnabled(true);
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
        txtID.setBackground(Color.white);
        txtName.setBackground(Color.white);
        txtPrice.setBackground(Color.white);

    }//GEN-LAST:event_btnRefeshActionPerformed
//int Flag = 0;
    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
        if (CheckAll() == true) {
            addCan();
            fillToTable();
            saveFile();
            reset();
        }

    }//GEN-LAST:event_btnAddActionPerformed
    private boolean CheckAll() {
        String id = txtID.getText();
        if (!"".equals(txtID.getText()) && !"".equals(txtName.getText()) && !"".equals(txtPrice.getText()) && !"0".equals(txtPrice.getText())) {
            for (Milk mi : MilkList) {
                Milk milk = new Milk(mi.getID(), mi.getName(), mi.getPrice());
                if (id.equals(mi.getID())) {
                    txtID.setBackground(Color.red);
                    return false;
                } else {
                    txtID.setBackground(Color.white);
                }
            }
            String Price = txtPrice.getText();
            for (int i = 0; i < Price.length(); i++) {
                Boolean flags = Character.isDigit(Price.charAt(i));
                if (!flags) {
                    txtPrice.setBackground(Color.red);
                    return false;
                } else {
                    txtPrice.setBackground(Color.WHITE);
                }
            }

        } else {
            txtID.setBackground(Color.red);
            txtName.setBackground(Color.red);
            txtPrice.setBackground(Color.red);
            return false;
        }
        txtID.setBackground(Color.white);
        txtName.setBackground(Color.white);
        txtPrice.setBackground(Color.white);
        return true;
    }
    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
        deleteTb();
        fillToTable();
        saveFile();
    }//GEN-LAST:event_btnDeleteActionPerformed
    private void deleteTb() {
        int result = JOptionPane.showConfirmDialog(this, "Do you want Delete?", "Delete?",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            MilkList.remove(currentRow);
            reset();
        }
    }

    private void deleteTbsale() {
        int result = JOptionPane.showConfirmDialog(this, "Do you want Delete?", "Delete?",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            SaleList.remove(currentRow);
        }
    }

    private void reset() {
        btnDelete.setEnabled(false);
        btnUpdate.setEnabled(false);
        txtID.setEnabled(true);
        btnAdd.setEnabled(true);
        txtID.setText("");
        txtName.setText("");
        txtPrice.setText("0");
    }
    private void ExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(this, "Do you want exit?", "Exit?",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            System.exit(0);
        }
    }//GEN-LAST:event_ExitActionPerformed

    private void btnReFeshActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnReFeshActionPerformed
        // TODO add your handling code here:
        for (Milk m : MilkList) {
            if (cbMenu.getSelectedItem().toString().equals(m.getName())) {
                txtPri.setText(m.getPrice() + "");
            }
        }
        cbBoba.setSelected(false);
        cbCheese.setSelected(false);

        cbEgg.setSelected(false);

        cbPopping.setSelected(false);
        cbPudding.setSelected(false);


    }//GEN-LAST:event_btnReFeshActionPerformed

    private void btnADDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnADDActionPerformed
        // TODO add your handling code here:
        checkOp(cbEgg);
        checkOp(cbBoba);
        checkOp(cbCheese);
        checkOp(cbPopping);
        checkOp(cbPudding);
        addCan2();
        fillToTable2();
        saveFile2();
        cbBoba.setSelected(false);
        cbCheese.setSelected(false);
        cbEgg.setSelected(false);
        cbPopping.setSelected(false);
        cbPudding.setSelected(false);
        Toping.clear();

    }//GEN-LAST:event_btnADDActionPerformed

    private void btnExitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExitActionPerformed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(this, "Do you want exit?", "Exit?",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            System.exit(0);
        } else {
            JOptionPane.showMessageDialog(this, "ok");
        }
    }//GEN-LAST:event_btnExitActionPerformed

    private void lbLogoutMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_lbLogoutMousePressed
        // TODO add your handling code here:
        int result = JOptionPane.showConfirmDialog(this, "Do you want Logout?", "Logout?",
                JOptionPane.YES_NO_OPTION,
                JOptionPane.WARNING_MESSAGE);
        if (result == JOptionPane.YES_OPTION) {
            this.dispose();
            Login mm = new Login();
            mm.setLocationRelativeTo(null);
            mm.setVisible(true);
        } else {
            JOptionPane.showMessageDialog(this, "ok");
        }

    }//GEN-LAST:event_lbLogoutMousePressed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:

        updateCan();
        fillToTable();
        reset();
        saveFile();


    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tbManaMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbManaMousePressed
        // TODO add your handling code here:
        currentRow = tbMana.getSelectedRow();
        showDetail(currentRow);
        txtID.setEnabled(false);
        btnAdd.setEnabled(false);
        btnDelete.setEnabled(true);
        btnUpdate.setEnabled(true);

    }//GEN-LAST:event_tbManaMousePressed

    private void btnSortActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSortActionPerformed
        // TODO add your handling code here:
        SortByPrice();
        fillToTable();
//        saveFile();
    }//GEN-LAST:event_btnSortActionPerformed

    private void cbMenuItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbMenuItemStateChanged
        for (Milk m : MilkList) {
            if (cbMenu.getSelectedItem().toString().equals(m.getName())) {
                txtPri.setText(m.getPrice() + "");
            }
        }
    }//GEN-LAST:event_cbMenuItemStateChanged

    private void tbSaleMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tbSaleMousePressed
        // TODO add your handling code here:
//        currentRow = tbSale.getSelectedRow();
//        btnDeleTe.setEnabled(true);

    }//GEN-LAST:event_tbSaleMousePressed

    private void cbCheeseMousePressed(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cbCheeseMousePressed
        // TODO add your handling code here:

    }//GEN-LAST:event_cbCheeseMousePressed

    private void cbCheeseItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cbCheeseItemStateChanged
        // TODO add your handling code here:        

    }//GEN-LAST:event_cbCheeseItemStateChanged
    private void Total() {
        Double Pri = Double.parseDouble(txtPri.getText());
        txtPri.setText(Pri + 10000 + "");
    }

    private void SortByPrice() {
        Collections.sort(MilkList, new Comparator<Milk>() {
            @Override
            public int compare(Milk o1, Milk o2) {
                return o2.getPrice() < o1.getPrice() ? 1 : -1;
            }
        });
    }

    private void showDetail(int r) {
        String id = (String) tbMana.getValueAt(r, 0);
        txtID.setText(id);
        String name = (String) tbMana.getValueAt(r, 1);
        txtName.setText(name);
        Double Price = (Double) tbMana.getValueAt(r, 2);
        txtPrice.setText(Price.toString());

    }

    private void updateCan() {
        Milk m = MilkList.get(currentRow);
        m.setName(txtName.getText());
        m.setPrice(Double.parseDouble(txtPrice.getText()));

    }

    private void addCan() {
        String id = txtID.getText();
        String name = txtName.getText();
        Double Price = Double.parseDouble(txtPrice.getText());
        Milk c = new Milk(id, name, Price);
        MilkList.add(c);

    }

    private void addCan2() {
        String Name = txtID.getText();

        String f = cbMenu.getSelectedItem().toString();//Milk name

        for (Map.Entry<String, Milk> entry : menu.entrySet()) {
            if (entry.getValue().getName().equals(f)) {
                Double price = entry.getValue().getPrice();
                txtPri.setText(((price) + (Toping.size() * 10000)) + "");
                Object[] row = {f, (Toping.size() < 0) ? "" : Toping.toString(), (price + Toping.size() * 10000) + " Vnd"};
                DefaultTableModel model = (DefaultTableModel) tbSale.getModel();
                model.addRow(row);
            }

        }   
        Double price = Double.parseDouble(txtPri.getText());
        for (Milk mi : MilkList) {
            if (f.equals(mi.getName())) {
                Sales s = new Sales(SaleList.size(), mi, (Toping.size() < 0) ? "" : Toping.toString(), mi.getPrice() + (Toping.size() * 10000));
                SaleList.add(s);
            }         

        }

    }

    private void saveFile() {
        XFile.writeObject(filePath, MilkList);
    }

    private void saveFile2() {
        XFile.writeObject(FileSale, SaleList);
    }
    List<String> Toping;

    private void checkOp(JCheckBox ck) {
        String value = ck.getActionCommand();
        if (ck.isSelected()) {
            Toping.add(value);

        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HomeMilkTea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HomeMilkTea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HomeMilkTea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HomeMilkTea.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HomeMilkTea().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel Content;
    private javax.swing.JButton Exit;
    private javax.swing.JPanel Milk;
    private javax.swing.JPanel Sale;
    private javax.swing.JButton btnADD;
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnExit;
    private javax.swing.JButton btnReFesh;
    private javax.swing.JButton btnRefesh;
    private javax.swing.JButton btnSort;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JCheckBox cbBoba;
    private javax.swing.JCheckBox cbCheese;
    private javax.swing.JCheckBox cbEgg;
    private javax.swing.JComboBox<String> cbMenu;
    private javax.swing.JCheckBox cbPopping;
    private javax.swing.JCheckBox cbPudding;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JLabel lbLogo;
    private javax.swing.JLabel lbLogout;
    private javax.swing.JLabel lbMilk;
    private javax.swing.JLabel lbsell;
    private javax.swing.JTable tbMana;
    private javax.swing.JTable tbSale;
    private javax.swing.JTextField txtID;
    private javax.swing.JTextField txtName;
    private javax.swing.JTextField txtPri;
    private javax.swing.JTextField txtPrice;
    // End of variables declaration//GEN-END:variables
}
